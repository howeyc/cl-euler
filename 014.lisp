#!/usr/local/bin/sbcl --script
(defun next-collatz (num)
 (if (evenp num)
  (/ num 2)
  (+ 1 (* 3 num))))
(defun make-collatz-list (startnum)
 (let ((lst nil))
  (do ((num startnum (next-collatz num)))
   ((eql num 1) lst)
   (push num lst))))
(defun find-max-list (limit)
 (let ((maxlength 0) (maxnumber 0))
  (do ((num 1 (+ 1 num)))
   ((eql num limit) maxnumber)
   (if (< maxlength (length (make-collatz-list num)))
    (progn
     (setf maxlength (length (make-collatz-list num)))
     (setf maxnumber num))))))
(defun euler ()
 (find-max-list 1000000)
)
(defun output-to-screen (x)
  (write-line x))
(output-to-screen (format nil "~A" (euler)))
