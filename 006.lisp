#!/usr/local/bin/sbcl --script
(defun make-number-list (limit)
 (let ((lst nil))
  (do ((i 1 (+ 1 i)))
   ((> i limit) lst)
   (push i lst))))
(defun sum-of-squares (lst)
 (let ((sum 0))
 (dolist (num lst sum)
  (setf sum (+ sum (* num num))))))
(defun square-of-sum (lst)
 (let ((sum (apply #'+ lst)))
  (* sum sum)))
(defun euler ()
  (let ((lst (make-number-list 100)))
    (- (square-of-sum lst) (sum-of-squares lst))))
(defun output-to-screen (x)
  (write-line x))
(output-to-screen (format nil "~a" (euler)))
